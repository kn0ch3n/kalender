// Auto-generated from accordion.html.
// DO NOT EDIT.

library x_accordion;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';
import 'package:widget/widget.dart';
import 'package:bot/bot.dart';



/**
 * [Accordion] wraps a set of [Collapse] elements and ensures only one is visible
 * at a time.
 *
 * See [Collapse] for details on how content is interpreted.
 */
class Accordion extends WebComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-accordion");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <content select="[is=x-collapse]"></content>
      ''');
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-accordion");
    setScopedCss("x-accordion", new autogenerated.ScopedCssMapper({"x-accordion":"[is=\"x-accordion\"]"}));
    _css = getScopedCss("x-accordion");
    __t = new autogenerated.Template(__root);
    if (__root is autogenerated.ShadowRoot) __root.applyAuthorStyles = true;
    __root.nodes.add(__shadowTemplate.clone(true));
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = null;
  }

  /** Original code from the component. */

  @protected
  void created() {
    ShowHideComponent.toggleEvent.forTarget(this).listen(_onOpen);
  }

  List<Element> _getAllCollapseElements() =>
      this.queryAll('[is=x-accordion] > [is=x-collapse]');

  void _onOpen(Event openEvent) {
    Element target = openEvent.target;
    if (target.xtag is ShowHideComponent) {
      _onShowHideToggle(target.xtag);
    }
  }

  void _onShowHideToggle(ShowHideComponent shc) {
    if (shc.isShown) {
      _getAllCollapseElements()
        .map((Element e) => e.xtag)
        .where((e) => e != shc)
        .forEach((ShowHideComponent e) {
          e.hide();
        });
    }
  }
}

//# sourceMappingURL=accordion.dart.map